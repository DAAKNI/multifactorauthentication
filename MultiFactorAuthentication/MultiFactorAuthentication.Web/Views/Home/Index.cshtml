@using System.Text
@using Microsoft.AspNetCore.Identity
@using MultiFactorAuthentication.Web.Services
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IFido2CredentialService Fido2CredentialService
@{
  ViewData["Title"] = "Home Page";


  //try
  //{


  //  var user = @UserManager.GetUserAsync(User);

  //  var userIdByte = Encoding.ASCII.GetBytes(user.Result.Id);
  //  var credential = Fido2CredentialService.GetCredentialsByUserHandleAsync(userIdByte);
  //}
  //catch
  //{

  //}




}

<div class="text-center">
  
  <div class="container">
    @if (SignInManager.IsSignedIn(User))
    {
      <h1 class="display-4">Dashboard</h1>

      var user = @UserManager.GetUserAsync(User);
      var userIdByte = Encoding.ASCII.GetBytes(user.Result.Id);
      var credential = Fido2CredentialService.GetCredentialsByUserHandleAsync(userIdByte);


      <p>Your second Factor is @user.Result.TwoFactorMethod</p>
      <p>User Id: @user.Result.Id</p>
      @if (user.Result.TwoFactorMethod == TwoFactorType.Fido2)
      {

        var pubKey = System.Convert.ToBase64String(credential.Result[0].PublicKey);
        var userHandle = Encoding.ASCII.GetString(credential.Result[0].UserHandle);
        <table>
          <tr>
            <th>UserHandle</th>
            <th>Public Key</th>
            <th>AaGuid</th>
          </tr>
          <tr>
            <td>@userHandle</td>
            <td> @pubKey</td>
            <td>@credential.Result[0].AaGuid</td>
          </tr>
          
        </table>
      
       
      }








    }
    else
    {
      <h1 class="display-4">Welcome</h1>
      <p> Please Register an Account </p>
    }

  </div>

</div>
